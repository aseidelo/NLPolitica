# -*- coding: utf-8 -*-
"""Read Page.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1x48-4lFfYedMx1C_kkXHrYwA3nV4F61Z
"""

###This function reads a Legislative Initiatives page and stores information into a data frame. 
###For each execution of this function, 10 Legislative Inititives will be stored (those correspondent
###to the page we are currently passing). It receives a beautiful soup object as input and outputs
###a 10-row DataFrame with the columns shown below.
def read_page(soup):
  
  titles = soup.find_all('span',{'class':"TextoRegular-Titulo"})
  contents = soup.find_all('span',{'class':"TextoRegular"})

  links_list = []
  for link in contents:
    if link.a != None:
      links_list.append(link.a['href'])

  titles_list =[]
  for title in titles:
    titles_list.append(title.text)

  contents_list=[]
  for content in contents:
    contents_list.append(content.text)

  df = pd.DataFrame(titles_list,columns=['HEADERS'])
  df['CONTENTS'] = pd.DataFrame(contents_list)

  types = (df[df['HEADERS'] == "Tipo"]['CONTENTS']).reset_index()['CONTENTS']
  numbers = (df[df['HEADERS'] == "Número"]['CONTENTS']).reset_index()['CONTENTS']
  sessions = (df[df['HEADERS'] == "Sessão"]['CONTENTS']).reset_index()['CONTENTS']
  authorship = (df[df['HEADERS'] == "Autoria"]['CONTENTS']).reset_index()['CONTENTS']
  titles = df[df['HEADERS'] == "Título"]['CONTENTS'].reset_index()['CONTENTS']


  this_page_initiatives_df = pd.DataFrame({"TYPE":types,
                      "NUMBER":numbers,
                      "SESSION":sessions,
                      "AUTHORSHIP":authorship,
                      "TITLE":titles,
                      "URL":links_list})
  return this_page_initiatives_df